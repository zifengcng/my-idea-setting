<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="664" />
    <option name="newTranslationDialogY" value="469" />
    <histories>
      <item value="shrink" />
      <item value="unexcepted branch" />
      <item value="cursor" />
      <item value="Prepared" />
      <item value="去重" />
      <item value="hook" />
      <item value="lynx" />
      <item value="猞猁" />
      <item value="she'li" />
      <item value="she" />
      <item value="luchs" />
      <item value="luch" />
      <item value="&lt;p&gt;This implementation iterates over the specified collection, checking each element returned by the iterator in turn to see if it's contained in this collection. If all elements are so contained &lt;tt&gt;true&lt;tt&gt; is returned, otherwise &lt;tt&gt;false&lt;tt&gt;." />
      <item value="Bulk Operations" />
      <item value="Absent" />
      <item value="Client" />
      <item value="Unite" />
      <item value="统一" />
      <item value="统一指标" />
      <item value="无效" />
      <item value="Returns &lt;tt&gt;true&lt;tt&gt; if this set contains all of the elements of the specified collection. If the specified collection is also a set, this method returns &lt;tt&gt;true&lt;tt&gt; if it is a &lt;i&gt;subset&lt;i&gt; of this set. @param c collection to be checked for containment in this set @return &lt;tt&gt;true&lt;tt&gt; if this set contains all of the elements of the specified collection @throws ClassCastException if the types of one or more elements in the specified collection are incompatible with this set (&lt;a href=&quot;Collection.htmloptional-restrictions&quot;&gt;optional&lt;a&gt;) @throws NullPointerException if the specified collection contains one or more null elements and this set does not permit null elements (&lt;a href=&quot;Collection.htmloptional-restrictions&quot;&gt;optional&lt;a&gt;), or if the specified collection is null @see contains(Object)" />
      <item value="匹配" />
      <item value="Reserved Code Cache Size" />
      <item value="Compares the specified object with this list for equality. Returns &lt;tt&gt;true&lt;tt&gt; if and only if the specified object is also a list, both lists have the same size, and all corresponding pairs of elements in the two lists are &lt;i&gt;equal&lt;i&gt;. (Two elements &lt;tt&gt;e1&lt;tt&gt; and &lt;tt&gt;e2&lt;tt&gt; are &lt;i&gt;equal&lt;i&gt; if &lt;tt&gt;(e1==null ? e2==null : e1.equals(e2))&lt;tt&gt;.) In other words, two lists are defined to be equal if they contain the same elements in the same order. This definition ensures that the equals method works properly across different implementations of the &lt;tt&gt;List&lt;tt&gt; interface. @param o the object to be compared for equality with this list @return &lt;tt&gt;true&lt;tt&gt; if the specified object is equal to this list" />
      <item value="perm" />
      <item value="lookup parent from repository" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="38" />
        <entry key="ENGLISH" value="38" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669186815999" />
  </component>
</application>